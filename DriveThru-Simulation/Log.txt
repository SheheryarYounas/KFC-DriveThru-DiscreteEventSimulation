1. First, I am setting up a discrete event simulation as the assignment wants discrete events.
2. I will ask the user how long they want to run the simulation for.
3. Then, I need the average arrival rate. For now, I will assume the user is an expert and can provide an accurate estimate of the 
average arrival rate. I will ask the user for the average arrival rate.
4. Alright, above tasks are done.
5. Now that I have the average arrival rate, I will use poisson distribution to generate the arrival times. The poisson distribution
is used to help us simulate when each customer will arrive. I will use the average arrival rate as the lambda value for the
poisson. So, in the end, this will give us a list of random arrival times for each customer in a realistic way.
6. Why use poisson and not any other distribution? Well, first, as discussed, poisson is used to simulate and predict arrival times
and we need to do this for our drive-thru. Second, poisson is a discrete distribution and we are using discrete events. Third, 
poisson assumes that each event occurs independently of the other events. This is true for our drive-thru. This is because arrival of one
car does not affect the arrival of another car. 
7. I am gonna use a java library to use poisson distribution to generate the arrival times. I will use the apache commons math library.
8. Alright, I will start implementing. Brb.
9. I am back. I cannot directly import the apache library into my project. Gonna download it first.
10. To download the library, use https://commons.apache.org/proper/commons-math/
11. I downloaded the binary zip file. It is version 4.0 Beta. Guess I will use this version.
12. Just made a folder in C drive and called it Java Downloaded Libaries. In the future, I will add all downloaded libraries here.
13. Alright, so apparently for VS code, I need to add the jar files to lib folder. I already have this here. So I will just add to that.
14. Alright, added the jar files. Let's see if the import statement now works.
15. Usually, version 3 is imported but since mine is 4.0 beta 1, I wanna import that because maybe I'm stupid and willing to 
take the risk. To import, use import org.apache.commons.math4.distribution.PoissonDistribution;
16. Not as simple as that. First suggestion is to make a pom.xml file to add the dependency. I don't know what that is. Let's see.
17. Alright, we ignore point 16. The jar files are enough and now I need to tell VS code where to find the jar files.
18. Added lines 7-9 in settings.json in .vscode folder. 
19. NOTHINGS WORKING. How do I import this now? Time to ask Bing AI. 
20. Alright, create new file in project called module-info.java. Add the following code to it:
21. requires org.apache.commons.math4;
22. Click on Java Build Path by right clicking on project and then clicking properties. Then, Add external jars.
23. This is what Bing AI said. Let's see if it works.
24. Why am I stuck on this problem? It has been 30 minutes and I cannot seem to import it. Let's find a youtube video.
25. The 2 Minute YouTube video solved it!!!!!!!!!!!!!!!!!!!! Liked the video for future.
26. So just go to Java Projects on bottom left and go to referenced libraries. Add jar files there. 
27. I will keep the JAR files here and not just get it from my C drive because maybe problems may occur if someone else runs this.
28. Math 4 is not working. I simply cannot determine how to get poisson distribution from it or if it even exists in this version.
It does probably exist but I cannot find the syntax anywhere on the internet. I will use Math 3.
29. Adding math 3 jar files to project.
30. Alright, now it worked. Poisson will give inter-arrival times. Meaning the time between each arrival of car or customer.
31. We used 1 / ArrivalRate as we want the units to be time / customer in order to get the inter-arrival times.
32. Alright, taking a break, just getting to this point took so long and fried my brain. I will continue later.
33. Alright back, lets begin.
34. Using the poisson distribution to generate the inter-arrival times.
35. We are not doing 1 / ArrivalRate. Every source is confusing. Just arrival rate will be passed.
36. Made the customer class and made a separate class for Simulation. Want to make sure my program does follow OOP principles.
37. Added a function in customer class to set the wait time. Basically, I subtract the total time spent in the system by the time
being served in the system.
38. When customer class is created, the waiting time is automatically calculated.
39. Now when the simulation starts, the first customer arrives after a random inter-arrival time generated by poisson distribution.
40. Alright, so now that poisson is set and ready to give us customers, we are ready to let customers flood in.
41. IA will be receiving a lot of customers (I am losing my mind).
42. So, I have started adding cars when the inter arrival time is met or exceeded.
43. I am making a separate files for list of features that need to be implemented.
44. Going to set up a customer ID too for my event log.
45. By now, we have set up the first discrete event which is the customer coming and joining the queue.
46. When customer enters the queue, the system calculates the next inter-arrival time and sets up the next arrival event.
47. The next event that needs to be implemented is the server serving the customer. Drive-thrus are serve one at a time so...
48. I'll get on this.
49. The Main user will know how many servers he has at his/her restaurant. I will ask the user for the number of servers. Then I will
create the objects for the servers and feed it to the simulation class.
50. I forgot that since I modelled the BPMN then I need to set my own servers. I will add custom servers later.
51. The scope of this project is becoming unrealistic and I need to control my mind here.
52. Here is the game plan: When I start the simulation, the first task is taking a look if any server is free. If yes, then I need to check
if there is a customer in the queue. If yes, then I need to serve the customer. Brb when I implement this.
53. I cannot believe that after all this coding, I have not yet tested anything. Allah khair.
54. Alright, so one mistake is that, the whole lane is not a single queue as my brain realises. The lane consists of multiple queues.
For example, there is a queue for the order taker and a queue for the cashier. There is often a distance between each window to Allow
this. Sometimes my genuis is...It's just frightening.
55. So for now, first we check if the servers are free. If so, then we check what is the role of that server. If it is the order taker,
then we check if there is a customer in the order taker queue. If yes, then we serve the customer. Same for other roles.
56. Let's now produce an event log for this. I will output it to a file.
57. Events include:
i) Customer arrives
ii) Order Taker takes order (starts his service)
iii) Order Taker finishes taking order (finishes his service)
iv) Cashier requests payment (starts his service)
v) Cashier receives payment (finishes his service)
vi) Chef starts preparing food (starts his service)
vii) Chef finishes preparing food (finishes his service)
viii) Customer receives food
ix) Customer departures
58. I am going to implement an order class and have a customer order object in the customer class.
59. Not doing 58, just keeping customer ID in order class.
60. After sipping some tea, I now realise that what I am doing is I need to see if order is ready by the time customer reaches the 
handoff window.
61. That's it folks for now. Implementing the logs feature. Let's see what comes out.
62. So basically, the order can be ready anytime and time is passing like crazy in my simulation. So if my event log is supposed to be 
exactly in order, what I am gonna do is that regardless of whenever the order is ready, I am going to just sort the event log in the end.
It's a simple spell but quite unbreakable. I am doing this assignment alone and the budget is 0$. So unless someone pays me, this
will work.

